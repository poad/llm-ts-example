name: Deploy

on:
  pull_request:
    branches:
      - main
  push:
    branches:
    - main

  workflow_dispatch:

env:
  OIDC_IAM_ROLE_ARN: ${{ secrets.OIDC_IAM_ROLE_ARN }}
  AWS_REGION: us-west-2

permissions:
  id-token: write
  contents: read

jobs:
  deploy-basic-example:
    # 同時実行すると CREATE_IN_PROGRESS や UPDATE_IN_PROGRESS 状態で cdk deploy を行う可能性があるため抑止する
    concurrency:
      group: "cloudformation-llm-basic"
      cancel-in-progress: false

    runs-on: ubuntu-latest
    steps:
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@00943011d9042930efac3dcd3a170e4273319bc8 # v5.1.0
      with:
        role-to-assume: ${{ env.OIDC_IAM_ROLE_ARN }}
        role-session-name: GitHubActions
        aws-region: ${{ env.AWS_REGION }}

    - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

    - name: Use Node.js
      uses: actions/setup-node@2028fbc5c25fe9cf00d9f06a71cc4710d4507903 # v6.0.0
      with:
        node-version: 'lts/*'
        check-latest: true
        package-manager-cache: false

    - uses: pnpm/action-setup@41ff72655975bd51cab0327fa583b6e92b6d3061 # v4.2.0
      name: Install pnpm
      with:
        run_install: |
          - recursive: true
            args: [--no-frozen-lockfile]
          - args: [--global, aws-cdk, esbuild]

    - uses: pnpm/action-setup@41ff72655975bd51cab0327fa583b6e92b6d3061 # v4.2.0
      name: Install pnpm
      with:
        run_install: |
          - recursive: true
            args: [--no-frozen-lockfile]
          - args: [--global, esbuild]

    - name: build
      run: pnpm build

    - name: deploy
      working-directory: ./basic/cdk
      run: |
        pnpm dlx aws-cdk@latest deploy \
          -c oai-instance-name=${{ secrets.AZURE_OPENAI_API_INSTANCE_NAME }} \
          -c oai-api-key=${{ secrets.AZURE_OPENAI_API_KEY }} \
          -c oai-api-version=${{ vars.AZURE_OPENAI_API_VERSION }} \
          -c langfuse-endpoint=${{ secrets.LANGFUSE_ENDPOINT }} \
          -c langfuse-public-key=${{ secrets.LANGFUSE_PUBLIC_KEY }} \
          -c langfuse-secret-key=${{ secrets.LANGFUSE_SECRET_KEY }} \
          -c langsmith-api-key=${{ secrets.LANGCHAIN_API_KEY }} \
          -c langsmith-project=${{ secrets.LANGCHAIN_PROJECT }} \
          -c anthropic-api-key=${{ secrets.ANTHROPIC_API_KEY }} \
          -c claude-model=${{ vars.CLAUDE_MODEL }}

  deploy-rag:
    # 同時実行すると CREATE_IN_PROGRESS や UPDATE_IN_PROGRESS 状態で cdk deploy を行う可能性があるため抑止する
    concurrency:
      group: "rag-examle-cloudformation"
      cancel-in-progress: false

    runs-on: ubuntu-latest
    steps:
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@00943011d9042930efac3dcd3a170e4273319bc8 # v5.1.0
      with:
        role-to-assume: ${{ env.OIDC_IAM_ROLE_ARN }}
        role-session-name: GitHubActions
        aws-region: ${{ env.AWS_REGION }}

    - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

    - name: Use Node.js
      uses: actions/setup-node@2028fbc5c25fe9cf00d9f06a71cc4710d4507903 # v6.0.0
      with:
        node-version: 'lts/*'
        check-latest: true
        package-manager-cache: false

    - uses: pnpm/action-setup@41ff72655975bd51cab0327fa583b6e92b6d3061 # v4.2.0
      name: Install pnpm
      with:
        run_install: |
          - recursive: true
            args: [--no-frozen-lockfile]
          - args: [--global, aws-cdk, esbuild]

    - name: deploy
      working-directory: ./rag/cdk
      run: |
        pnpm dlx aws-cdk@latest deploy \
          -c oai-instance-name=${{ secrets.AZURE_OPENAI_API_INSTANCE_NAME }} \
          -c oai-api-key=${{ secrets.AZURE_OPENAI_API_KEY }} \
          -c oai-api-version=${{ vars.AZURE_OPENAI_API_VERSION }} \
          -c langfuse-endpoint=${{ secrets.LANGFUSE_ENDPOINT }} \
          -c langfuse-public-key=${{ secrets.LANGFUSE_PUBLIC_KEY }} \
          -c langfuse-secret-key=${{ secrets.LANGFUSE_SECRET_KEY }} \
          -c langsmith-api-key=${{ secrets.LANGCHAIN_API_KEY }} \
          -c langsmith-project=${{ secrets.LANGCHAIN_PROJECT }} \
          -c pinecone-index=${{ vars.PINECONE_INDEX }} \
          -c pinecone-api-key=${{ secrets.PINECONE_API_KEY }}
